// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  MANAGER
}

enum CompletionStatus {
  PENDING
  APPROVED
}

model User {
  id            String @id @default(uuid())
  name          String
  email         String @unique
  password_hash String
  role          Role

  manager Manager?

  @@map("users")
}

model Store {
  id         String      @id @default(uuid())
  name       String
  managers   Manager[]
  invoicings Invoicing[]
  losses     Loss[]

  @@map("stores")
}

model Invoicing {
  id       String   @id @default(uuid())
  value    Float
  date     DateTime
  store    Store    @relation(fields: [store_id], references: [id])
  store_id String

  @@unique([store_id, date])
  @@map("invoicings")
}

model Loss {
  id       String   @id @default(uuid())
  value    Float
  date     DateTime
  store    Store    @relation(fields: [store_id], references: [id])
  store_id String

  @@unique([store_id, date])
  @@map("losses")
}

model Manager {
  id   Int  @id @default(autoincrement())
  user User @relation(fields: [user_id], references: [id], onDelete: Cascade)

  user_id     String       @unique
  store       Store        @relation(fields: [store_id], references: [id])
  store_id    String
  completions Completion[]

  @@map("managers")
}

model Task {
  id               String       @id @default(uuid())
  title            String       @unique
  weekly_frequency Int          @default(1)
  completions      Completion[]

  @@map("tasks")
}

model Completion {
  id           String           @id @default(uuid())
  image        String
  completed_at DateTime         @default(now())
  status       CompletionStatus @default(PENDING)

  task       Task    @relation(fields: [task_id], references: [id])
  manager    Manager @relation(fields: [manager_id], references: [id])
  task_id    String
  manager_id Int

  @@map("completions")
}
